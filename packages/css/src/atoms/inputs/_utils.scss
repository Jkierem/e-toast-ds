@use "../../themes/default/globals/colors.scss" as colors;

@function create-group($text,$background: "none",$border: "none"){
  @return (
      "text": $text,
      "background": $background,
      "border": $border
  )
};

@mixin status-mixin($text,$background,$border) {
  color: $text;
  background-color: $background;
  border-color: $border
}

@mixin status($group) {
  @include status-mixin(
      map-get($group,"text"), 
      map-get($group,"background"), 
      map-get($group,"border")
  )
}

// Creates an outline border. Works when a class has a set padding and border width
// and passes it to the mixin. 
@mixin synthetic-outline-border ($width,$top,$right,$bottom,$left) {
  $focus-displacement: $width * 3;
  border-width: $width * 4;
  border-style: double;
  background-clip: padding-box;
  padding:
      $top - $focus-displacement
      $right - $focus-displacement
      $bottom - $focus-displacement
      $left - $focus-displacement
  ;
}

@mixin input-mixin($name,
  $idle,
  $active,
  $focus,
  $disable,
  $placeholder,
  $error,
  $success,
  $label,
  $labelError
) {
  .eds-#{$name}-input {
    @content("idle");
    @include status($idle);

    &:active {
        @content("active");
        @include status($active);
    }

    &:focus {
        outline: none;
        @content("focus");
        @include status($focus);
    }
    
    &:disabled {
        @content("disable");
        @include status($disable);
        cursor: not-allowed;
        &::placeholder {
          color: #E0E8EB;
        }
    }

    &::placeholder {
      @content("placeholder");
      @include status($placeholder);
    }

    &-root {
      display: inline-flex;
      flex-direction: column;
      &-input {
        position: relative;
      }
    }
    
    &--error {
      @content("error");
      @include status($error);
    }

    &--success {
      @content("success");
      @include status($success);
      &-icon {
        position: absolute;
        right: 13px;
        bottom: 50%;
        transform: translateY(50%);
        color: colors.$success;
      }
    }
  }

  .eds-label-#{$name}-input {
    @content("label");
    @include status($label);
    &--error {
      @content("labelError");
      @include status($labelError);
    }
    &--disabled {
      @content("disable");
      @include status($disable);
    }
  }
  .eds-label-#{$name}-input-block {
    @content("labelError");
    @include status($labelError);
    display: inline-flex;
    align-items: center;
    margin-bottom: 8px;
  }

  .label-container {
    width: 100%;
    display: flex;
    justify-content: space-between;
  }
}